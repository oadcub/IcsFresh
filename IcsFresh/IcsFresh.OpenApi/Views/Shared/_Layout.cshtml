<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="~/Content/angular-material.css" rel="stylesheet" />
    <link href="~/Content/ng-table.css" rel="stylesheet" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <style>
        li.dropdown-submenu:hover ul {
            display: block;
            left: 100%;
        }

        .dropdown-submenu {
            position: relative;
        }

            .dropdown-submenu:hover .dropdown-menu {
                top: 0;
            }
    </style>
</head>
<body>

    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Ics fresh", "Products", "ProductPage", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Products", "Products", "ProductPage", new { area = "" }, null)</li>
                    <li>@Html.ActionLink("API", "Index", "Help", new { area = "" }, null)</li>
                    <li>@{ Html.RenderAction("MasterDataMenu", "Admin", new { area = string.Empty }); }</li>

                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>
    <script>

this.undefinedToEmpty = function (obj) {
    if (obj == undefined || obj == null) {
        return '';
    } else {
        return obj;
    }
}
this.isEmpty = function (obj) {
    return this.undefinedToEmpty(obj) == '';
}
        var JSHELPER = {};

        JSHELPER.apiDefaultParameter = ''; //'?userid=administrator';
        JSHELPER.baseApiUrl = '@System.Configuration.ConfigurationManager.AppSettings["IcsFresh.OpenApi.Url"]';
        JSHELPER.WebUrl = '@System.Configuration.ConfigurationManager.AppSettings["IcsFresh.OpenApi.WebUrl"]';
        JSHELPER.getWepApiUrl = function (controller, action) {
            return JSHELPER.baseApiUrl + controller + '/' + action + JSHELPER.apiDefaultParameter;
        }
        GLOBAL_VARIABLE = JSHELPER;
    </script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <link href="~/Content/chosen.min.css" rel="stylesheet" />
    <link href="~/Content/chosen-sprite.png" rel="image_src" />

    <script>
        $(".dropdown-menu li a").click(function () {
            var selText = $(this).text();
            $(this).parents('.btn-group').find('.dropdown-toggle').html(selText + ' <span class="caret"></span>');
        });
    </script>

    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/angular-sanitize.min.js"></script>
    <script src="~/Scripts/angular-animate.min.js"></script>
    <script src="~/Scripts/angular-aria.min.js"></script>
    <script src="~/Scripts/angular-messages.js"></script>
    <script src="~/Scripts/angular-ui/ui-bootstrap.min.js"></script>
    <script src="~/Scripts/angular-ui/ui-bootstrap-tpls.min.js"></script>
    <script src="~/Scripts/angular-material.min.js"></script>
    <script src="~/Scripts/ng-table.min.js"></script>
    <script src="~/Scripts/angular-chosen.min.js"></script>
    <link href="~/Content/ui-bootstrap-csp.css" rel="stylesheet" />
    <script src="~/Scripts/global/PageHelper.js"></script>
    <script>
        var app = angular.module('myApp', ['ngTable', 'ui.bootstrap', 'ngSanitize', 'angular.chosen', 'ngMaterial']);
        app.directive('masterData', function (KdaHttp, $compile, $uibModal) {
            return {
                replace: false,
                restrict: 'A',
                scope: {
                    masterData: '=?',
                    masterDataOption: '=?'
                }
                , link: function (scope, elm, attrs) {
                    KdaHttp.Post('masterdata', 'AutoComplete', scope.masterDataOption)
                        .then(function (response) {
                            if (scope.$parent.masterData === undefined) {
                                scope.$parent.masterData = {};
                            }
                            scope.$parent.masterData[scope.masterData] = response;
                        });
                }
            };
        });
    </script>
    <script src="~/Scripts_ngapp/_service/http-client.service.js"></script>
    <script src="~/Scripts_ngapp/_factory/utility.factory.js"></script>
    @RenderSection("scripts", required: false)
</body>
</html>
